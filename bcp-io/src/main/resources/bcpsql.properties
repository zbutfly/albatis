dataggr.migrate.bcp.sql.task=SELECT t.TASK_ID AS ID, t.TASK_NAME AS NAME,\
sd.DATA_SOURCE_ID AS SRC_DS_ID, sd.DATA_SOURCE_NAME AS SRC_DS_NAME, sdst.CONFIG_VALUE AS SRC_DS_TYPE, sd.CONNECTION_PARAM AS SRC_DS_URI, st.TABLE_INFO_ID AS SRC_TABLE_ID, st.DB_TABLE_NAME AS SRC_TABLE_NAME,\
dd.DATA_SOURCE_ID AS DST_DS_ID, dd.DATA_SOURCE_NAME AS DST_DS_NAME, ddst.CONFIG_VALUE AS DST_DS_TYPE, dd.CONNECTION_PARAM AS DST_DS_URI, dt.TABLE_INFO_ID AS DST_TABLE_ID, dt.DB_TABLE_NAME AS DST_TABLE_NAME,\
tc1.DB_COLUMN_NAME AS KEY_WORD_COLUMN,\
t.PRIORITY AS PRIORITY,\
tc2.DB_COLUMN_NAME AS TIME_COLUMN,\
IFNULL(IFNULL(ds3.CONNECTION_PARAM,ds2.CONNECTION_PARAM),ds4.CONNECTION_PARAM) AS CHG_DS_URI,\
IFNULL(IFNULL(IF (LENGTH(bi.ANCILLARY_TOPIC) = 0, NULL, bi.ANCILLARY_TOPIC),IF (LENGTH(t.ANCILLARY_TOPIC) = 0, NULL, t.ANCILLARY_TOPIC)),bi2.ANCILLARY_TOPIC) AS CHG_TABLE_NAME,\
IFNULL(sc.PREFIX,sc2.PREFIX) AS DST_PREFIX,\
IFNULL(sc.COLUMN_FAMILY,sc2.COLUMN_FAMILY) AS DST_FAMILY,\
IFNULL(tc3.DB_COLUMN_NAME,tc7.DB_COLUMN_NAME) AS ROW_KEY_COLUMN,\
IFNULL(tc4.DB_COLUMN_NAME,tc8.DB_COLUMN_NAME) AS COL_KEY_COLUMN,\
IF (LENGTH(sc.ROW_KEY_EXPR) = 0, NULL, sc.ROW_KEY_EXPR) AS ROW_KEY_EXPR,\
IF (LENGTH(sc.COL_KEY_EXPR) = 0, NULL, sc.COL_KEY_EXPR) AS COL_KEY_EXPR,\
IF (LENGTH(sc.LAST_CF) = 0, NULL, sc.LAST_CF) AS LAST_CF,\
IF (LENGTH(sc.LAST_SUFFIX) = 0, NULL, sc.LAST_SUFFIX) AS LAST_SUFFIX,\
IF (LENGTH(sc.COUNT_CF) = 0, NULL, sc.COUNT_CF) AS COUNT_CF,\
IF (LENGTH(sc.AGGS_DB_TABLE_NAME) = 0, NULL, sc.AGGS_DB_TABLE_NAME) AS AGGS_DB_TABLE_NAME,\
IF (LENGTH(sc.AGGS_CF) = 0, NULL, sc.AGGS_CF) AS AGGS_CF,\
IF (LENGTH(sc.AGGS_ROWKEY_EXPR) = 0, NULL, sc.AGGS_ROWKEY_EXPR) AS AGGS_ROWKEY_EXPR,\
tc5.DB_COLUMN_NAME AS AGGS_KEY_COLUMN,\
tc6.DB_COLUMN_NAME AS AGGS_TIME_COLUMN \
FROM TASK_INFO t \
INNER JOIN TABLE_INFO st ON t.SRC_TABLE_ID = st.TABLE_INFO_ID AND st.DELETE_FLAG = 0 \
INNER JOIN DATA_SOURCE sd ON st.DATA_SOURCE_ID = sd.DATA_SOURCE_ID AND sd.DELETE_FLAG = 0 \
INNER JOIN SYS_CODE_CONFIG sdst ON sd.DATA_SOURCE_TYPE = sdst.ID AND sdst.DELETE_FLAG = 0 \
INNER JOIN TABLE_INFO dt ON t.DST_TABLE_ID = dt.TABLE_INFO_ID AND dt.DELETE_FLAG = 0 \
INNER JOIN DATA_SOURCE dd ON t.DST_DATA_SOURCE_ID = dd.DATA_SOURCE_ID AND dd.DELETE_FLAG = 0 \
INNER JOIN SYS_CODE_CONFIG ddst ON dd.DATA_SOURCE_TYPE = ddst.ID AND ddst.DELETE_FLAG = 0 \
LEFT JOIN BUSINESS_INFO bi ON bi.BUSINESS_INFO_ID = t.BUSINESS_INFO_ID AND bi.DELETE_FLAG = 0 \
LEFT JOIN TABLE_COLUMN tc1 ON t.KEY_WORD_COLUMN_ID = tc1.TABLE_COLUMN_ID AND tc1.DELETE_FLAG = 0 \
LEFT JOIN TABLE_COLUMN tc2 ON t.TIME_COLUMN_ID = tc2.TABLE_COLUMN_ID AND tc2.DELETE_FLAG = 0 \
LEFT JOIN DATA_SOURCE ds2 ON t.ANCILLARY_DATA_SOURCE_ID = ds2.DATA_SOURCE_ID AND ds2.DELETE_FLAG = 0 \
LEFT JOIN DATA_SOURCE ds3 ON bi.ANCILLARY_DATA_SOURCE_ID = ds3.DATA_SOURCE_ID AND ds3.DELETE_FLAG = 0 \
LEFT JOIN SUBJECT_CONFIG sc ON t.TASK_ID = sc.TASK_ID AND sc.DELETE_FLAG = 0 \
LEFT JOIN TABLE_COLUMN tc3 ON sc.ROW_KEY_COLUMN_ID = tc3.TABLE_COLUMN_ID AND tc3.DELETE_FLAG = 0 \
LEFT JOIN TABLE_COLUMN tc4 ON sc.COL_KEY_COLUMN_ID = tc4.TABLE_COLUMN_ID AND tc4.DELETE_FLAG = 0 \
LEFT JOIN TABLE_COLUMN tc5 ON sc.AGGS_KEY_COLUMN_ID = tc5.TABLE_COLUMN_ID AND tc5.DELETE_FLAG = 0 \
LEFT JOIN TABLE_COLUMN tc6 ON sc.AGGS_TIME_COLUMN_ID = tc6.TABLE_COLUMN_ID AND tc6.DELETE_FLAG = 0 \
LEFT JOIN TASK_INFO ti2 ON t.CONTINUATION_TASK_ID = ti2.TASK_ID \
LEFT JOIN SUBJECT_CONFIG sc2 ON sc2.TASK_ID = ti2.TASK_ID \
LEFT JOIN TABLE_COLUMN tc7 ON sc2.ROW_KEY_COLUMN_ID = tc7.TABLE_COLUMN_ID AND tc7.DELETE_FLAG = 0 \
LEFT JOIN TABLE_COLUMN tc8 ON sc2.COL_KEY_COLUMN_ID = tc8.TABLE_COLUMN_ID AND tc8.DELETE_FLAG = 0 \
LEFT JOIN BUSINESS_INFO bi2 ON bi2.BUSINESS_INFO_ID = ti2.BUSINESS_INFO_ID AND bi2.DELETE_FLAG = 0 \
LEFT JOIN DATA_SOURCE ds4 ON bi2.ANCILLARY_DATA_SOURCE_ID = ds4.DATA_SOURCE_ID AND ds4.DELETE_FLAG = 0 \
WHERE t.DELETE_FLAG = 0 AND t.TASK_TYPE in (5, 6, 7) \
AND (CONCAT('@', bi.BUSINESS_NAME) LIKE ? OR t.TASK_NAME LIKE ?);

dataggr.migrate.bcp.sql.fields=SELECT t.DST_TABLE_ID,\
sc.DB_COLUMN_NAME AS SRC_NAME, sc.PK_FLAG AS SRC_KEY, ss.CONFIG_VALUE AS SRC_TYPE, cm.TRANSFROM_EXPR AS SRC_EXPR,\
cm.NESTED_FLAG AS NESTED_FLAG, \
dc.DB_COLUMN_NAME AS DST_NAME, sc.PK_FLAG AS IS_ROW_KEY, dc.PK_FLAG AS DST_KEY, ds.CONFIG_VALUE AS DST_TYPE,\
IF (LENGTH(ssc.CONFIG_VALUE) = 0, NULL, ssc.CONFIG_VALUE) AS DST_SEG_MODE,\
IF (LENGTH(dc.COPY_TO) = 0, NULL, dc.COPY_TO) AS DST_COPY_TO \
FROM TASK_INFO t \
INNER JOIN COLUMN_MAPPING cm ON cm.TASK_ID = t.TASK_ID AND cm.DELETE_FLAG = 0 \
LEFT JOIN TABLE_COLUMN sc ON cm.SRC_COLUMN_ID = sc.TABLE_COLUMN_ID AND sc.DELETE_FLAG = 0 \
LEFT JOIN SYS_CODE_CONFIG ss ON sc.COLUMN_TYPE = ss.ID AND ss.DELETE_FLAG = 0 \
INNER JOIN TABLE_COLUMN dc ON cm.DST_COLUMN_ID = dc.TABLE_COLUMN_ID AND dc.DELETE_FLAG = 0 \
INNER JOIN SYS_CODE_CONFIG ds ON dc.COLUMN_TYPE = ds.ID AND ds.DELETE_FLAG = 0 \
LEFT JOIN SYS_CODE_CONFIG ssc ON ssc.ID = dc.ANALYZER AND ssc.DELETE_FLAG = 0 \
WHERE t.TASK_ID = ? AND t.DELETE_FLAG = 0;