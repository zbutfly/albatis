## url: zk://hzga136:2181,hzga137:2181,hzga138:2181/kafka?groupId=&zkTimeout=&buffer=&commit=&offsetReset=&timeout=&strategy=&maxNessage=
albatis.kafka.zookeeper=hzga136:2181,hzga137:2181,hzga138:2181/kafka
## when consumer, use this to auto detect partitions of topic, but it can be fetch from zk
#albatis.kafka.bootstrap.servers=hzga136:9092,hzga137:9092,hzga138:9092,hzga139:9092,hzga140:9092,hzga141:9092
#albatis.kafka.zookeeper.connection.timeout.ms=3000
#albatis.kafka.socket.buffer.bytes=5242880

## optional comsumer configuration
#albatis.kafka.group.id=
#albatis.kafka.auto.commit.enable=true
#albatis.kafka.auto.commit.interval.ms=60000
#albatis.kafka.auto.offset.reset=smallest
#albatis.kafka.partition.parallelism=3
#albatis.kafka.zookeeper.sync.time.ms=60000
#albatis.kafka.zookeeper.session.timeout.ms=300000
#albatis.kafka.backoff.ms=60000
#albatis.kafka.rebalance.retries=2
#albatis.kafka.session.timeout.ms=120000
#albatis.kafka.partition.assignment.strategy=range
#albatis.kafka.fetch.message.max.bytes=10485760
## optional producer configuration
#albatis.kafka.request.required.acks=-1
#albatis.kafka.producer.type=sync
#albatis.kafka.compression.codec=snappy
#albatis.kafka.key.serializer.class=kafka.serializer.StringEncoder

#albatis.kafka.internal.pool.size=3000000